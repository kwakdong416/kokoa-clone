.user-component {
  justify-content: space-between;
  /* avatar-sm+Channel과 2+chevron-right을 분리했다.*/
}

.user-component,
.user-component__column:first-child {
  display: flex;
  align-items: center;

  /* 
  display: flex;를 줘서 수직으로 배치돼 있던 걸 수평으로 정렬시킨다. 

  user-component는 2개의 column을 가진 <div>이다. 이후 다른 요소를 추가할 수 있기 때문에 first-child를 사용한 것이다.

  text-align은 block 요소에만 적용이 가능하며 정렬되는 것은 block 요소 속 inline 요소 뿐이다. 
 
  */

  /*
user-component__column:first-child는
user-component__column의 자식(img, h4) 중 첫째가 아니고
user-component__column이랑 똑같은 클래스를 가지고 있는 형제 중에서 첫째만 선택한다라는 뜻이다.
그러므로 만약 .user-component__column:nth-child(2);를 사용하면 <div class="user-component__column"></div>가 선택된다.
*/
}

.user-component__avatar {
  width: 70px;
  height: 70px;
  border-radius: 40%;
  text-align: center;
  margin-right: 20px;
  /* 아이콘과 Nicolas 텍스트에 margin을 주어 공간을 만들었다. */
}

.user-component__title {
  font-weight: 600;
  font-size: 22px;
}

.user-component__subtitle {
  margin-top: 8px;
  font-size: 16px;
  color: rgba(0, 0, 0, 0.5);
}

/* 반복되는 작업들은 component로 만들어두면 나중에 재활용하기 매우 쉽다. */

.user-component__avatar--xl {
  width: 80px;
  height: 80px;
}

.user-component__avatar--sm {
  width: 60px;
  height: 60px;
  border-radius: 40%;
}

.user-component__title--not-bold {
  font-weight: 400;
  /* friends.html에서 굵지 않은 Channel 텍스트를 위해 만들었다. */
}

.user-component__column:last-child {
  color: rgba(0, 0, 0, 0.5);
  /* 여러 user-component들 중 구분을 위해 last-child를 주고 색상을 변경했다.*/
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  /* flex-direction: column;으로 주축의 방향을 바꾼 후 
  align-items: flex-end;로 흰 바탕의 하얀 1을 오른쪽으로 이동시켜줬다.
  다만 이러면 friends.html의 2+chevron-right까지 영향을 끼친다.
  그래서 friend.html의 해당 부분을 <div> 로 다시 감싸 flex가 아니게 만들어야 한다.
  */
}

.user-component__time {
  display: block;
  /* 
  시간 부분에 대한 설정이다.
  <span>은 inline 요소임으로 display:block;을 줘 높이와 너비를 갖게 만든 후 margin 혹은 padding을 줄 수 있다. 
  */
  padding-bottom: 10px;
}

.user-component__chats {
  padding-bottom: 15px;
}

.user-component__text i {
  margin-left: 5px;
  color: red;
}
